<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>J&M Angeln - Checkout</title>
    <script src="https://www.paypal.com/sdk/js?client-id=<%= clientID %>&currency=EUR&disable-funding=sofort"></script>
    <% include includes/styles %>
    <link rel="stylesheet" href="/styles/checkout.css">
</head>
<body>

    <% include includes/navigation %>

    <main class="centered">

        <h1 class="light">Bestellübersicht</h1>

        <hr>

        <section class="flex-column">
            <% for (const product of cart) { %>
                <div class="flex-row max-width">
                    <h2 class="light">
                        <span><%= product.quantity %></span>
                        <span>&nbsp;x&nbsp;</span>
                        <span><%= product.data.name %></span>
                        <span><%= product.size || '' %></span>
                        <span><%= product.color || '' %></span>
                    </h2>
                    <h2 class="light price">
                        <%= (product.data.price * product.quantity).toFixed(2) %> €
                    </h2>
                </div>
            <% } %>
        </section>

        <hr>

        <section class="flex-column">
            <div class="flex-row max-width">
                <h2 class="light total">Gesamtwert</h2>
                <h2 class="light total price"><%= (total).toFixed(2) %> €</h2>
            </div>
        </section>

        <br>

        <div id="paypal-button-container"></div>

        <script>

            // Create Purchase Units
            let items = [];
            let total = 0;

            const descriptions = '<%= descriptions %>'.split(',');
            const prices = '<%= prices %>'.split(',');
            const quantities = '<%= quantities %>'.split(',');

            for (let i = 0; i < descriptions.length; i++) {
                console.log(prices[i]);
                items.push({
                    name: descriptions[i],
                    unit_amount: {
                        value: prices[i],
                        currency_code: 'EUR'
                    },
                    quantity: quantities[i]
                });
                console.log(prices[i]*quantities[i]);
                total += prices[i] * quantities[i];
                console.log(total);
            }

            const purchase_units = [{
                items,
                amount: {
                    value: total,
                    currency_code: 'EUR',
                    breakdown: {
                        item_total: {
                            value: total,
                            currency_code: 'EUR'
                        }
                    }
                }
            }];

            console.log(purchase_units);

            // Define Paypal Callback Functions
            function createOrder(data, actions) {
                return actions.order.create({ purchase_units });
            }

            function onApprove(data, actions) {
                return actions.order.capture().then(function(details) {
                    alert('Transaction completed by ' + details.payer.name.given_name);
                });
            }

            function onError(error) {
                console.error(error);
            }

            // Render Paypal Buttons
            paypal.Buttons({ createOrder, onApprove, onError }).render('#paypal-button-container');

        </script>

</body>
</html>
